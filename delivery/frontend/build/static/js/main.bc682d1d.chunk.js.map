{"version":3,"sources":["images/LoginPageClupLogo.png","constants/urlsAPI.js","utils/showError.js","utils/httpRequest.js","components/sub-components/Loginform.js","components/sub-components/Signupform.js","components/Start.js","components/sub-components/Searchsection.js","components/sub-components/TicketElement.js","components/sub-components/TicketsList.js","images/account.svg","components/sub-components/Account.js","components/Home.js","components/sub-components/GoBackButton.js","components/sub-components/GoHomeButton.js","components/sub-components/Navigation.js","components/Search.js","images/shop.png","components/sub-components/ShopElement.js","components/sub-components/ShopsList.js","components/Shops.js","utils/dateParser.js","components/sub-components/GoToButton.js","components/Shop.js","components/Lineup.js","components/Ticket.js","components/sub-components/ShopElementManager.js","components/sub-components/ShopsListManager.js","components/HomeManager.js","components/NewShop.js","components/sub-components/Queue.js","components/ShopManager.js","components/sub-components/TicketTracker.js","components/sub-components/TimeSlot.js","components/ParseTimeLine.js","App.js","reportWebVitals.js","index.js"],"names":["SSW_URL_API","QSW_URL_API","AMW_URL_API","ACCESS_TOKEN_NAME","showError","error","ErrorBackground","document","createElement","classList","add","id","Error","h3_1","innerHTML","h3_2","status","h3_3","data","buttonToLogin","addEventListener","window","location","href","buttonClose","getElementById","removeChild","appendChild","BASE_HEADERS_POST","BASE_HEADERS_GET","USERNAME","getSessionToken","localStorage","getItem","setSessionToken","token","setItem","getUsernameLocal","setUsernameLocal","username","isManager","axiosPOST","service","url","payload","headers","onOk","on500","onError","useOldSessionToken","setNewSessionToken","useUsername","console","log","URL","config","axios","post","then","response","catch","axiosGET","get","Loginform","props","useState","password","state","setState","history","useHistory","handleChange","e","target","value","prevState","sendLoginToServer","length","redirectToManagerHome","redirectToHome","push","className","open","onSubmit","preventDefault","reportValidity","autoComplete","onChange","type","placeholder","name","required","to","method","onClick","renderLogin","Signupform","nextBool","repeatPassword","email","phonenumber","shopOwner","credentialError","sendSignupToServer","alert","checked","renderSignup","Start","src","logo","alt","Searchsection","TicketElement","ticket","showShop","shop","scheduledEnteringTime","scheduledExitingTime","enterTime","exitTime","TicketsList","isLoaded","class","tickets","map","style","position","Account","accountToggler","setAccountToggler","toggleAccount","account","removeItem","accountSVG","Home","isLoadedTickets","isLoadedAccount","useEffect","GoBackButton","goBack","GoHomeButton","Navigation","goHome","Search","handleSubmit","TextField","label","fullWidth","Button","size","disabled","variant","color","ShopElement","shopImg","ShopsList","shops","Shops","isLoadedShops","dateToMinutes","date","Math","ceil","Date","parse","calcDay","day","toString","s","contains","GoToButton","content","Shop","isLoadedShop","isLoadedQueueMaxDuration","queueMaxDuration","shopId","match","params","description","shifts","shift","openingTime","closingTime","Lineup","ttr","duration","parseInt","sendLineUpToServer","Ticket","isLoadedTicket","ticketId","timeToReachTheShop","expectedDuration","ShopElementManager","ShopsListManager","HomeManager","NewShop","image","shopCapacity","timeslotMinutesDuration","maxEnteringClientInATimeslot","shiftsProto","sendNewShopToServer","Queue","lenght","ShopManager","queueTrigger","TicketTracker","ticketTracker","previousMatchingTicket","followingMatchingTicket","TimeSlot","timeslot","timeSlot","startingTime","endingTime","expectedEnteringTickets","expectedExitingTickets","ParseTimeLine","JSON","App","Fragment","CssBaseline","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bc682d1d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/LoginPageClupLogo.13974f22.png\";","export const SSW_URL_API = \"http://localhost:8081/SSW-1.0-SNAPSHOT/api/SSW\";\r\nexport const QSW_URL_API = \"http://localhost:8089/QSW-1.0-SNAPSHOT/api/QSW\";\r\nexport const AMW_URL_API = \"http://localhost:8082/AMW-1.0-SNAPSHOT/api/AMW\";\r\nexport const ACCESS_TOKEN_NAME = 'login_access_token';","import '../css/Error.css';\r\n\r\nexport const showError = (error) => {\r\n\r\n    if (error != null) {\r\n\r\n        let ErrorBackground = document.createElement(\"div\");\r\n        ErrorBackground.classList.add(\"errorBackground\");\r\n        ErrorBackground.id = \"error\";\r\n\r\n\r\n        let Error = document.createElement(\"div\");\r\n        Error.classList.add(\"flexColumnCenter\");\r\n        Error.classList.add(\"error\");\r\n\r\n        let h3_1 = document.createElement(\"h3\");\r\n        h3_1.innerHTML = \"ERROR!\";\r\n\r\n        let h3_2 = document.createElement(\"h3\");\r\n        h3_2.innerHTML = \"STATUS CODE: \" + error.status;\r\n\r\n        let h3_3 = document.createElement(\"h3\");\r\n        h3_3.innerHTML = \"ERROR MESSAGE: \" + error.data;\r\n\r\n        let buttonToLogin = document.createElement(\"button\");\r\n        buttonToLogin.innerHTML = \"Go to Login\";\r\n        const handleToLogin = () => {\r\n            window.location.href = \"/\";\r\n        }\r\n        buttonToLogin.addEventListener(\"click\", handleToLogin);\r\n\r\n        let buttonClose = document.createElement(\"button\");\r\n        buttonClose.innerHTML = \"Close\";\r\n        const handleClose = () => {\r\n            document.getElementById(\"App\").removeChild(document.getElementById(\"error\"));\r\n        }\r\n        buttonClose.addEventListener(\"click\", handleClose);\r\n\r\n        Error.appendChild(h3_1);\r\n        Error.appendChild(h3_2);\r\n        Error.appendChild(h3_3);\r\n        Error.appendChild(buttonToLogin);\r\n        Error.appendChild(buttonClose);\r\n\r\n        ErrorBackground.appendChild(Error);\r\n\r\n        document.getElementById(\"App\").appendChild(ErrorBackground);\r\n    }\r\n}","import axios from 'axios';\r\nimport { AMW_URL_API, QSW_URL_API, SSW_URL_API, ACCESS_TOKEN_NAME } from '../constants/urlsAPI.js';\r\nimport { DEBUG_MODE } from '../constants/debug.js';\r\nimport { showError } from './showError.js';\r\n\r\nconst BASE_HEADERS_POST = {\r\n    \"accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n}\r\n\r\nconst BASE_HEADERS_GET = {\r\n    \"accept\": \"application/json\"\r\n}\r\n\r\nconst USERNAME = 'username';\r\nconst IS_MANAGER = 'isManager';\r\n\r\nexport const getSessionToken = () => {\r\n    return localStorage.getItem(ACCESS_TOKEN_NAME);\r\n}\r\n\r\nexport const setSessionToken = (token) => {\r\n    localStorage.setItem(ACCESS_TOKEN_NAME, token);\r\n}\r\n\r\nexport const getUsernameLocal = () => {\r\n    return localStorage.getItem(USERNAME);\r\n}\r\n\r\nexport const setUsernameLocal = (username, isManager) => {\r\n    localStorage.setItem(USERNAME, username);\r\n    localStorage.setItem(IS_MANAGER, isManager);\r\n}\r\n\r\nexport const axiosPOST = (service, url, payload, headers, onOk, on500, onError, useOldSessionToken, setNewSessionToken, useUsername) => {\r\n    console.log(\"############################################\");\r\n    console.log(\"ASYNC HTTP REQUEST:\");\r\n\r\n    const config = {\r\n        headers: {\r\n            ...headers,\r\n            ...BASE_HEADERS_POST\r\n        }\r\n    }\r\n\r\n    if (useOldSessionToken) {\r\n        console.log(\"old session-token: \" + getSessionToken() + \" .\");\r\n        config.headers['session-token'] = getSessionToken();\r\n    }\r\n    if (useUsername) {\r\n        console.log(\"username: \" + getUsernameLocal());\r\n        config.headers['username'] = getUsernameLocal();\r\n    }\r\n\r\n    var URL;\r\n\r\n    if (service === \"AMW\") {\r\n        URL = AMW_URL_API;\r\n    }\r\n    else if (service === \"QSW\") {\r\n        URL = QSW_URL_API;\r\n    }\r\n    else {\r\n        URL = SSW_URL_API;\r\n    }\r\n\r\n    URL += url;\r\n\r\n    console.log(\"POST\");\r\n    console.log(URL);\r\n    console.log(payload);\r\n    console.log(config.headers);\r\n    console.log(\"useOldSessionToken: \" + useOldSessionToken);\r\n    console.log(\"setNewSessionToken: \" + setNewSessionToken);\r\n    console.log(\"useUsername: \" + useUsername);\r\n    console.log(\"--------------------------------------------\");\r\n    console.log(\"HTTP RESPONSE:\");\r\n\r\n    axios.post(URL, payload, config)\r\n    .then(function (response) {\r\n        console.log(\"response data:\");\r\n        console.log(response.data);\r\n        console.log(\"response status:\");\r\n        console.log(response.status);\r\n        console.log(\"response headers\");\r\n        console.log(response.headers);\r\n        if (response.status === 200) {\r\n            if (setNewSessionToken) {\r\n                console.log(\"new session-token: \" + response.headers[\"session-token\"] + \" .\");\r\n                setSessionToken(response.headers[\"session-token\"]);\r\n            }\r\n            onOk(response);\r\n        }\r\n        else {\r\n            DEBUG_MODE ? console.log(\"(correct, but not 200:) Should redirect to /Error\") : showError(response);\r\n        }\r\n    })\r\n    .catch(function (error) {\r\n        console.log(error);\r\n        if (error.response) {\r\n            console.log(\"error data:\");\r\n            console.log(error.response.data);\r\n            console.log(\"error status:\");\r\n            console.log(error.response.status);\r\n            console.log(\"error headers\");\r\n            console.log(error.response.headers);\r\n            if (on500 !== null && error.response.status === 500) {\r\n                on500(error);\r\n            }\r\n            else {\r\n                DEBUG_MODE ? console.log(\"(on500:) redirect to /Error\") : showError(error.response);\r\n            }\r\n        }\r\n        else {\r\n            if (onError !== null) {\r\n                onError(error);\r\n            }\r\n            else {\r\n                DEBUG_MODE ? console.log(\"(onError:) redirect to /Error\") : showError(error.response);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport const axiosGET = (service, url, headers, onOk, on500, onError, useOldSessionToken, setNewSessionToken, useUsername) => {\r\n    console.log(\"############################################\");\r\n    console.log(\"ASYNC HTTP REQUEST:\");\r\n\r\n    const config = {\r\n        headers: {\r\n            ...headers,\r\n            ...BASE_HEADERS_GET\r\n        }\r\n    }\r\n\r\n    if (useOldSessionToken) {\r\n        config.headers['session-token'] = getSessionToken();\r\n    }\r\n    if (useUsername) {\r\n        config.headers['username'] = getUsernameLocal();\r\n    }\r\n\r\n    var URL;\r\n\r\n    if (service === \"AMW\") {\r\n        URL = AMW_URL_API;\r\n    }\r\n    else if (service === \"QSW\") {\r\n        URL = QSW_URL_API;\r\n    }\r\n    else {\r\n        URL = SSW_URL_API;\r\n    }\r\n\r\n    URL += url;\r\n\r\n    console.log(\"GET\");\r\n    console.log(URL);\r\n    console.log(config.headers);\r\n    console.log(\"useOldSessionToken: \" + useOldSessionToken);\r\n    console.log(\"setNewSessionToken: \" + setNewSessionToken);\r\n    console.log(\"useUsername: \" + useUsername);\r\n    console.log(\"--------------------------------------------\");\r\n    console.log(\"HTTP RESPONSE:\");\r\n\r\n    axios.get(URL, config)\r\n        .then(function (response) {\r\n            console.log(\"response data:\");\r\n            console.log(response.data);\r\n            console.log(\"response status:\");\r\n            console.log(response.status);\r\n            console.log(\"response headers\");\r\n            console.log(response.headers);\r\n            if (response.status === 200) {\r\n                if (setNewSessionToken) {\r\n                    console.log(\"new session-token: \" + response.headers[\"session-token\"] + \" .\");\r\n                    setSessionToken(response.headers[\"session-token\"]);\r\n                }\r\n                onOk(response);\r\n            }\r\n            else {\r\n                DEBUG_MODE ? console.log(\"(correct, but not 200:) Should redirect to /Error\") : showError(response);\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n            if (error.response) {\r\n                console.log(\"error data:\");\r\n                console.log(error.response.data);\r\n                console.log(\"error status:\");\r\n                console.log(error.response.status);\r\n                console.log(\"error headers\");\r\n                console.log(error.response.headers);\r\n                if (on500 !== null && error.response.status === 500) {\r\n                    on500(error);\r\n                }\r\n                else {\r\n                    DEBUG_MODE ? console.log(\"(on500:) redirect to /Error\") : showError(error.response);\r\n                }\r\n            }\r\n            else {\r\n                if (onError !== null) {\r\n                    onError(error);\r\n                }\r\n                else {\r\n                    DEBUG_MODE ? console.log(\"(onError:) redirect to /Error\") : showError(error.response);\r\n                }\r\n            }\r\n        });\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { axiosPOST, setUsernameLocal } from '../../utils/httpRequest.js';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Loginform = (props) => {\r\n    \r\n    const [state, setState] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n\r\n    const handleLoginSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (e.target.reportValidity()) {\r\n            sendLoginToServer();\r\n        }\r\n    }\r\n\r\n    const sendLoginToServer = () => {\r\n        if ((state.username.length !== 0) && (state.password.length !== 0)) {\r\n            const payload = {\r\n                \"username\": state.username,\r\n                \"password\": state.password\r\n            }\r\n            const onOk = (response) => {\r\n                setUsernameLocal(response.data.username, response.data.isManager);\r\n                console.log(\"username setted in local storage: \" + response.data.username);\r\n                if (response.data.isManager) {\r\n                    redirectToManagerHome();\r\n                }\r\n                else {\r\n                    redirectToHome();\r\n                }\r\n            }\r\n            axiosPOST(\"AMW\", \"/login\", payload, {}, onOk, null, null, false, true, false);\r\n        }\r\n    }\r\n\r\n    const redirectToHome = () => {\r\n        history.push(\"/Home\");\r\n    }\r\n    const redirectToManagerHome = () => {\r\n        history.push(\"/HomeManager\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"loginFormContainer\">\r\n            {\r\n                props.open ?\r\n                    <form onSubmit={handleLoginSubmit} autoComplete=\"off\">\r\n                        <div className=\"inputContainer\">\r\n                            <h3>Login to your account</h3>\r\n                            <div className=\"flexColumnCenter\">\r\n                                <label className=\"labelSignup\">Username</label>\r\n                                <input onChange={handleChange}\r\n                                    value={state.username}\r\n                                    id=\"username\"\r\n                                    type=\"text\" placeholder=\"Username\" name=\"username\" required />\r\n                            </div>\r\n                            <div className=\"flexColumnCenter\">\r\n                                <label className=\"labelSignup\">Password</label>\r\n                                <input onChange={handleChange}\r\n                                    id=\"password\"\r\n                                    value={state.password}\r\n                                    type=\"password\" placeholder=\"Password\" name=\"password\" required />\r\n                            </div>\r\n                            <button className=\"activeButton\" type=\"submit\">Confirm</button>\r\n                        </div>\r\n                        <div className=\"forgotPasswordContainer\">\r\n                            <span>Forgot <Link to=\"/\">password?</Link></span>\r\n                        </div>\r\n                    </form>\r\n                    :\r\n                    <form method=\"post\" autoComplete=\"off\">\r\n                        <div className=\"inputContainer\">\r\n                            <h3> Already have an account?</h3>\r\n                            <button className=\"activeButton\" onClick={props.renderLogin}>Login</button>\r\n                        </div>\r\n                    </form>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loginform;","import React, { useState } from 'react';\r\nimport { axiosPOST, setUsernameLocal } from '../../utils/httpRequest';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Signupform = (props) => {\r\n\r\n    const [state, setState] = useState({\r\n        nextBool: false,\r\n        username: \"\",\r\n        password: \"\",\r\n        repeatPassword: \"\",\r\n        email: \"\",\r\n        phonenumber: \"\",\r\n        shopOwner: false,\r\n        credentialError: null\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n\r\n    const handleCheckbox = (e) =>{\r\n        const {id, checked} = e.target;\r\n        console.log(checked);\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: checked\r\n        }))\r\n    }\r\n\r\n    const checkValidity = (e) => {\r\n        if (document.getElementById(\"signupForm\").reportValidity()) {\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                nextBool: true\r\n            }))\r\n        }\r\n    }\r\n\r\n    const handleSignupSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (state.nextBool !== true) {\r\n            return;\r\n        }\r\n        if (document.getElementById(\"signupForm\").reportValidity()) {\r\n            if (state.password === state.repeatPassword) {\r\n                sendSignupToServer();\r\n            }\r\n            else {\r\n                //TODO should find better way\r\n                alert(\"password do not match!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const sendSignupToServer = () => {\r\n        const payload = {\r\n            \"username\": state.username,\r\n            \"password\": state.password,\r\n            \"password2\": state.repeatPassword,\r\n            \"email\": state.email,\r\n            \"phoneNumber\": state.phonenumber,\r\n            \"isManager\": state.shopOwner\r\n        }\r\n        const onOk = (response) => {\r\n            setUsernameLocal(response.data.username, response.data.isManager);\r\n            console.log(\"username setted in local storage: \" + response.data.username);\r\n            if(response.data.isManager){\r\n                redirectToManagerHome();\r\n            }\r\n            else{\r\n                redirectToHome();\r\n            }\r\n        }\r\n        axiosPOST(\"AMW\", \"/registration\", payload, {}, onOk, null, null, false, true, false);\r\n    }\r\n\r\n    const redirectToHome = () => {\r\n        history.push(\"/Home\");\r\n    }\r\n    const redirectToManagerHome = () => {\r\n        history.push(\"/HomeManager\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"loginFormContainer\">\r\n            {props.open ?\r\n                <form onSubmit={handleSignupSubmit} id=\"signupForm\" autoComplete=\"off\">\r\n                    {!state.nextBool ?\r\n                        <div className=\"inputContainer\">\r\n                            <h3>Create a new account</h3>\r\n                            <div className=\"flexColumnCenter\">\r\n                                <label className=\"labelSignup\">Username</label>\r\n                                <input onChange={handleChange}\r\n                                    value={state.username}\r\n                                    id=\"username\"\r\n                                    type=\"text\" placeholder=\"Username\" name=\"username\" required />\r\n                            </div>\r\n                            <div className=\"flexColumnCenter\">\r\n                                <label className=\"labelSignup\">Email</label>\r\n                                <input onChange={handleChange}\r\n                                    value={state.email}\r\n                                    id=\"email\"\r\n                                    type=\"email\" placeholder=\"email@example.com\" name=\"email\" required />\r\n                            </div>\r\n                            <div className=\"flexColumnCenter\">\r\n                                <label className=\"labelSignup\">Phone number</label>\r\n                                <input onChange={handleChange}\r\n                                    value={state.phonenumber}\r\n                                    id=\"phonenumber\"\r\n                                    type='number' placeholder=\"+39 0123456789\" name=\"phoneNumber\" required />\r\n                            </div>\r\n                            <div className=\"flexColumnCenter\">\r\n                                <label className=\"labelSignup\">Are you a shop owner?</label>\r\n                                <input onChange={handleCheckbox}\r\n                                    value={state.shopOwner}\r\n                                    id=\"shopOwner\"\r\n                                    type=\"checkbox\" name=\"shopOwner\" />\r\n                            </div>\r\n                            <button className=\"activeButton\" onClick={checkValidity}>Next</button>\r\n                        </div>\r\n                        :\r\n                        <div className=\"inputContainer\">\r\n                            <h3>Create a password</h3>\r\n                            <div className=\"flexColumnCenter\">\r\n                                <label className=\"labelSignup\">Password</label>\r\n                                <input onChange={handleChange}\r\n                                    value={state.password}\r\n                                    id=\"password\"\r\n                                    type=\"password\" placeholder=\"Password\" name=\"password\" required />\r\n                            </div>\r\n                            <div className=\"flexColumnCenter\">\r\n                                <label className=\"labelSignup\">Repeat password</label>\r\n                                <input onChange={handleChange}\r\n                                    value={state.repeatPassword}\r\n                                    id=\"repeatPassword\" type=\"password\" placeholder=\"Repeat password\" name=\"repeatPassword\" required />\r\n                            </div>\r\n                            <div className=\"flexRowCenter\">\r\n                                <button className=\"activeButton\" type=\"submit\" onClick={() => {\r\n                                    setState(prevState => ({\r\n                                        ...prevState,\r\n                                        'nextBool': false\r\n                                    }));\r\n                                }}> Back </button>\r\n                                <button className=\"activeButton\">Confirm</button>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </form>\r\n                :\r\n                <form id=\"signupForm\" autoComplete=\"off\">\r\n                    <h3> Don't have an account?</h3>\r\n                    <button className=\"activeButton\" onClick={props.renderSignup}>Signup</button>\r\n                </form>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signupform;","import React, { useState } from 'react';\r\nimport '../css/Start.css';\r\nimport logo from '../images/LoginPageClupLogo.png';\r\nimport Loginform from './sub-components/Loginform';\r\nimport Signupform from './sub-components/Signupform';\r\n\r\nconst Start = () => {\r\n\r\n    const [state, setState] = useState(\"login\");\r\n\r\n    const renderLogin = () => {\r\n        setState(\"login\");\r\n    }\r\n    const renderSignup = () => {\r\n        setState(\"signup\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"appContainer\">\r\n            <div className={`topContainer ${(state === \"login\") ? 'topContainerOpen' : 'topContainerClosed'}`}>\r\n                <div className=\"clupLogoContainer\">\r\n                    <img src={logo} alt=\"\" />\r\n                </div>\r\n                <Loginform open={(state === \"login\") ? true : false} renderLogin={renderLogin}/>\r\n            </div>\r\n            <div className={`bottomContainer ${(state === \"login\") ? 'bottomContainerClosed' : 'bottomContainerOpen'}`}>\r\n                <Signupform open={(state === \"login\") ? false : true} renderSignup={renderSignup}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Start;","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Searchsection = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const handleClick = () => {\r\n        history.push('/Search');\r\n    }\r\n\r\n    return (\r\n        <div className=\"searchSectionContainer flexColumnCenter\">\r\n            <h3> Where do you want to go? </h3>\r\n            <button onClick={handleClick} className=\"smallButton\">Search a shop</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchsection;","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { axiosGET } from '../../utils/httpRequest';\r\n\r\n\r\nconst TicketElement = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const handleOnClickTicket = () => {\r\n        history.push('/Ticket/' + props.ticket.id);\r\n    }\r\n\r\n    const handleOnClickShop = () => {\r\n        history.push('/Shop/' + props.ticket.shop.id);\r\n    }\r\n\r\n    const handleScan = () => {\r\n        const onOk = (response) => {\r\n            alert(\"please reload page to see the changes !\")\r\n        }\r\n        axiosGET(\"QSW\", \"/scanTicket/\" + props.ticket.id, {}, onOk, null, null, true, false, true);\r\n    }\r\n\r\n    console.log(props.ticket);\r\n\r\n    return (\r\n        <div className={\"flexColumnCenter card \" + props.ticket.status}>\r\n\r\n            <div>TICKET (ID {props.ticket.id}) {props.ticket.status}</div>\r\n\r\n            {props.showShop ? <div className=\"bold\"> {props.ticket.shop.name} </div> : \"\"}\r\n\r\n            <div>\r\n\r\n                <div className=\"flexColumnCenter\">\r\n\r\n                    {props.ticket.scheduledEnteringTime ? <div className=\"flexRowCenter\"> <div className=\"bold spaceLeft\">start</div> {props.ticket.scheduledEnteringTime} </div> : \"\"}\r\n\r\n                    {props.ticket.scheduledExitingTime ? <div className=\"flexRowCenter\"><div className=\"bold spaceLeft\">expected end</div> {props.ticket.scheduledExitingTime} </div> : \"\"}\r\n\r\n                    {props.ticket.enterTime ? <div> <br /> actual enter time: {props.ticket.enterTime} </div> : \"\"}\r\n\r\n                    {props.ticket.exitTime ? <div> actual exit time: {props.ticket.exitTime} </div> : \"\"}\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {\r\n                props.showShop ?\r\n                    <div className=\"flexRowCenter\">\r\n                        <button onClick={handleOnClickTicket} className=\"smallButton\">Ticket info</button>\r\n                        <div>or</div>\r\n                        <button onClick={handleOnClickShop} className=\"smallButton\">Shop info</button>\r\n                    </div>\r\n                    :\r\n                    <div className=\"flexRowCenter\">\r\n                        <button onClick={handleScan} className=\"smallButton\" > Scan ticket </button>\r\n                    </div>\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TicketElement;","import React from 'react';\r\nimport TicketElement from './TicketElement';\r\nimport { WaveLoading } from 'react-loadingg';\r\n\r\nconst TicketsList = (props) => {\r\n\r\n    if (props.isLoaded) {\r\n        return (\r\n            <div className=\"flexColumnCenter\">\r\n                <div className=\"bold yourTicketTitle\">YOUR TICKETS:</div>\r\n                <div class=\"tooltip\">info\r\n                    <span class=\"tooltiptext\">\r\n                        In this section you can see all your tickets <br />\r\n                        Each ticket contains the following informations: <br />\r\n                        - name of the shop the ticket is enqueued to <br />\r\n                        - ticket id and status (also the color of the border is based on the status) <br/>\r\n                        - start the starting time to scan the ticket to enter the shop<br />\r\n                        - expected end: the expected time you'll scan the ticket to exit the shop<br />\r\n                        - if available the time you scanned the ticket to enter the shop <br />\r\n                        - if available the time you scanned the ticket to exit the shop <br />\r\n                        - two buttons to check more informations about the ticket or about the shop <br />\r\n                    </span>\r\n                </div>\r\n                {(props.tickets !== null && props.tickets.length !== 0) ?\r\n                    (props.tickets).map(ticket => <TicketElement key={ticket.id} ticket={ticket} showShop={true} />)\r\n                    :\r\n                    <div>You have no tickets.</div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return <div className=\"flexColumnCenter\"> <WaveLoading style={{ position: \"relative\" }} /></div>\r\n    }\r\n}\r\n\r\nexport default TicketsList;","export default __webpack_public_path__ + \"static/media/account.7c160289.svg\";","import React, { useState } from 'react';\r\nimport { WaveLoading } from 'react-loadingg';\r\nimport { ACCESS_TOKEN_NAME } from '../../constants/urlsAPI.js';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { axiosGET } from '../../utils/httpRequest.js';\r\nimport accountSVG from '../../images/account.svg';\r\n\r\nconst Account = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [accountToggler, setAccountToggler] = useState(false);\r\n\r\n    const toggleAccount = () => {\r\n        setAccountToggler(!accountToggler);\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        const onOk = () => {\r\n            localStorage.removeItem(ACCESS_TOKEN_NAME);\r\n            history.push(\"/\");\r\n        };\r\n        axiosGET(\"AMW\", \"/logout\", {}, onOk, null, null, false, false, true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"flexColumnCenter\">\r\n            { accountToggler\r\n                ?\r\n                <div className=\"accountInfoContainer flexColumnCenter card\">\r\n                    <div className=\"bold\"> Account info: </div>\r\n                    {props.isLoaded ?\r\n                        <div>\r\n                            <div> Username: {props.account.username} </div>\r\n                            <div> Email: {props.account.email} </div>\r\n                            {props.account.isManager ? <div>You are a manager</div> : \"\"}\r\n                        </div>\r\n                        :\r\n                        <div className=\"flexColumnCenter\"> <WaveLoading style={{ position: \"relative\" }} /></div>\r\n                    }\r\n                    <div className=\"flexRowCenter\">\r\n                        <button className=\"smallButton\" onClick={handleLogout}> Logout </button>\r\n                        <button className=\"smallButton\" onClick={toggleAccount}> close </button>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <button className=\"accountButton\" onClick={toggleAccount}>\r\n                        <img\r\n                            className=\"accountIcon\"\r\n                            src={accountSVG}\r\n                            alt=\"Account\" />\r\n                    </button>\r\n                </div>\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Account;","import React, { useEffect, useState } from 'react';\r\nimport Searchsection from './sub-components/Searchsection';\r\nimport TicketsList from './sub-components/TicketsList';\r\nimport Account from './sub-components/Account';\r\nimport { axiosGET } from '../utils/httpRequest.js';\r\n\r\nconst Home = () => {\r\n\r\n    const [state, setState] = useState({\r\n        isLoadedTickets: false,\r\n        isLoadedAccount: false,\r\n        tickets: null,\r\n        account: null\r\n    });\r\n\r\n    //fetch tickets info\r\n    useEffect(() => {\r\n        const onOk = (response) => {\r\n            setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    isLoadedTickets: true,\r\n                    tickets: response.data\r\n                }\r\n            });\r\n        }\r\n        axiosGET(\"SSW\", \"/tickets\", {}, onOk, null, null, true, false, true);\r\n    }, []);\r\n\r\n    //fetch account info\r\n    useEffect(() => {\r\n        const onOk = (response) => {\r\n            setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    isLoadedAccount: true,\r\n                    account: response.data\r\n                }\r\n            });\r\n        }\r\n        axiosGET(\"AMW\", \"/userinfo\", {}, onOk, null, null, true, false, true);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Account isLoaded={state.isLoadedAccount} account={state.account} />\r\n            <Searchsection />\r\n            <TicketsList isLoaded={state.isLoadedTickets} tickets={state.tickets} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst GoBackButton = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <button className=\"navigationButton\" onClick={() => { history.goBack() }}> Go back </button>\r\n    );\r\n}\r\n\r\nexport default GoBackButton;","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst GoHomeButton = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const goHome = () => {\r\n        if (localStorage.getItem(\"isManager\") === \"true\") {\r\n            history.push(\"/HomeManager\")\r\n        }\r\n        else {\r\n            history.push(\"/Home\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button className=\"navigationButton\" onClick={goHome}> Home </button>\r\n    );\r\n}\r\n\r\nexport default GoHomeButton;","import React from 'react';\r\nimport GoBackButton from './GoBackButton';\r\nimport GoHomeButton from './GoHomeButton';\r\n\r\nconst Navigation = (props) => {\r\n\r\n    return (\r\n        <div className=\"navContainer\">\r\n            {props.goBack ? <GoBackButton /> : \"\"}\r\n            {props.goHome ? <GoHomeButton /> : \"\"} \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Navigation from './sub-components/Navigation';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst Search = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        alert(\"function not availble...\");\r\n    }\r\n\r\n    const handleAllShops = () => {\r\n        history.push(\"/Shops\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"flexColumnCenter\">\r\n\r\n            <Navigation goBack={true} goHome={false} />\r\n            <div class=\"tooltip\">info\r\n                    <span class=\"tooltiptext\">\r\n                    In this section you can search for a shop.<br />\r\n                    Currently the prototype does not allow the users to search for a specific shop or to check the nearby ones, but only to\r\n                    retrieve all the shops in the database.\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"width80 flexRowCenter\">\r\n                <TextField id=\"standard-basic\" label=\"Search a shop\" fullWidth />\r\n                <Button onClick={handleSubmit} size=\"medium\" disabled variant=\"contained\" color=\"secondary\">Search</Button>\r\n            </div>\r\n\r\n            <div className=\"width80 topSpace\">\r\n                <Button onClick={handleSubmit} size=\"medium\" disabled variant=\"contained\" color=\"secondary\">Nearby</Button>\r\n            </div>\r\n\r\n            <div className=\"width80 topSpace\">\r\n                <Button onClick={handleAllShops} size=\"medium\" variant=\"contained\" color=\"secondary\">All shops</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","export default __webpack_public_path__ + \"static/media/shop.4e4a89bf.png\";","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport shopImg from '../../images/shop.png';\r\n\r\nconst ShopElement = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const handleOnClick = () => {\r\n        history.push('/Shop/' + props.shop.id);\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"flexColumnCenter card\">\r\n            <div className=\"flexRowCenter\">\r\n                <div>\r\n                    <img\r\n                        className=\"shopImg\"\r\n                        src={shopImg}\r\n                        alt=\"Account\" />\r\n                </div>\r\n                <div className=\"flexColumnCenter\">\r\n                    <div className=\"bold\"> {props.shop.name} </div>\r\n                    <button className=\"smallButton\" onClick={handleOnClick}>More info</button>\r\n                    <div> {props.shop.position} </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ShopElement;","import React from 'react';\r\nimport ShopElement from './ShopElement';\r\nimport { WaveLoading } from 'react-loadingg';\r\n\r\nconst ShopsList = (props) => {\r\n    if (props.isLoaded) {\r\n        return (\r\n            <div className=\"flexColumnCenter\">\r\n                <div className=\"bold yourTicketTitle\">ALL SHOPS:</div>\r\n                <div class=\"tooltip\">Info\r\n                    <span class=\"tooltiptext\">\r\n                        Here are listed all the shops in the database. <br />\r\n                        For each shop you can see the shop name, the shop position, and a more info button to check all the informations about the shop.\r\n                </span>\r\n                </div>\r\n                {(props.shops !== null && props.shops.length !== 0) ?\r\n                    (props.shops).map(shop => <ShopElement key={shop.id} shop={shop} />)\r\n                    :\r\n                    \"There are no shops.\"\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return <div className=\"flexColumnCenter\"> <WaveLoading style={{ position: \"relative\" }} /></div>\r\n    }\r\n}\r\n\r\nexport default ShopsList;","import React, { useState, useEffect } from 'react';\r\nimport { axiosGET } from '../utils/httpRequest';\r\nimport Searchsection from './sub-components/Searchsection';\r\nimport ShopsList from './sub-components/ShopsList';\r\nimport Navigation from './sub-components/Navigation';\r\nimport Account from './sub-components/Account';\r\n\r\nconst Shops = () => {\r\n\r\n    const [state, setState] = useState({\r\n        isLoadedShops: false,\r\n        isLoadedAccount: false,\r\n        shops: null,\r\n        account: null\r\n    });\r\n\r\n    //fetch shops info\r\n    useEffect(() => {\r\n        const onOk = (response) => {\r\n            setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    isLoadedShops: true,\r\n                    shops: response.data\r\n                }\r\n            });\r\n        }\r\n        axiosGET(\"SSW\", \"/AllShops\", {}, onOk, null, null, true, false, true);\r\n    }, []);\r\n\r\n    //fetch account info\r\n    useEffect(() => {\r\n        const onOk = (response) => {\r\n            setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    isLoadedAccount: true,\r\n                    account: response.data\r\n                }\r\n            });\r\n        }\r\n        axiosGET(\"AMW\", \"/userinfo\", {}, onOk, null, null, true, false, true);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Account isLoaded={state.isLoadedAccount} account={state.account}/>\r\n            <div className=\"flexRowCenter\">\r\n            <Navigation goBack={true} goHome={true} />\r\n            </div>\r\n            <Searchsection />\r\n            <ShopsList isLoaded={state.isLoadedShops} shops={state.shops} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Shops;","export const dateToMinutes = (date) => {\r\n    return Math.ceil((Date.parse(date) / 1000) / 60);\r\n}\r\n\r\nexport const calcDay = (data) => {\r\n    \r\n    var day = data.toString();\r\n    \r\n    var s = \"\";\r\n\r\n    if (day.contains(\"1\")) {\r\n        s += \"Monday; \";\r\n    }\r\n    if (day.contains(\"2\")) {\r\n        s += \"Tuesday; \";\r\n    }\r\n    if (day.contains(\"3\")) {\r\n        s += \"Wednesday; \";\r\n    }\r\n    if (day.contains(\"4\")) {\r\n        s += \"Thursday; \";\r\n    }\r\n    if (day.contains(\"5\")) {\r\n        s += \"Friday; \";\r\n    }\r\n    if (day.contains(\"6\")) {\r\n        s += \"Saturday; \";\r\n    }\r\n    if (day.contains(\"7\")) {\r\n        s += \"Sunday; \";\r\n    }\r\n    if (day.contains(\"0\")) {\r\n        s += \"Every Day of the Week;\";\r\n    }\r\n\r\n    return s;\r\n}","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst GoToButton = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <button onClick={() => { history.push(props.to) }}> {props.content} </button>\r\n    );\r\n}\r\n\r\nexport default GoToButton;","import React, { useState, useEffect } from 'react';\r\nimport { WaveLoading } from 'react-loadingg';\r\nimport { calcDay } from '../utils/dateParser.js';\r\nimport { axiosGET } from '../utils/httpRequest.js';\r\nimport Navigation from './sub-components/Navigation';\r\nimport GoToButton from './sub-components/GoToButton.js';\r\n\r\nconst Shop = (props) => {\r\n\r\n    const [state, setState] = useState({\r\n        isLoadedShop: false,\r\n        shop: null,\r\n        isLoadedQueueMaxDuration: false,\r\n        queueMaxDuration: null,\r\n        shopId: props.match.params.id\r\n    });\r\n\r\n    //fetch shop info\r\n    useEffect(() => {\r\n        const onOk = (response) => {\r\n            setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    isLoadedShop: true,\r\n                    shop: response.data.shop\r\n                }\r\n            });\r\n        }\r\n        axiosGET(\"SSW\", (\"/shopDetail/\" + state.shopId), {}, onOk, null, null, true, false, true);\r\n    }, [state.shopId]);\r\n\r\n    //fetch queue expected duration\r\n    useEffect(() => {\r\n        const onOk = (response) => {\r\n            setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    isLoadedQueueMaxDuration: true,\r\n                    queueMaxDuration: response.data\r\n                }\r\n            });\r\n        }\r\n        axiosGET(\"QSW\", (\"/queueInfo/\" + state.shopId), {}, onOk, null, null, true, false, true);\r\n    }, [state.shopId]);\r\n\r\n    return (\r\n        <div className=\"flexColumnCenter\">\r\n\r\n            <Navigation goBack={true} goHome={true} />\r\n            <div class=\"tooltip\">Info\r\n                    <span class=\"tooltiptext\">\r\n                    This is the page of a shop. <br />\r\n                        This page contains: <br />\r\n                        - shop name <br />\r\n                        - shop description <br />\r\n                        - shop position <br />\r\n                        - the expected queue duration field represents the maximum awiting time you can have by enqueuing in this moment <br />\r\n                        - the enqueue button\r\n                </span>\r\n            </div>\r\n\r\n            {state.isLoadedShop ?\r\n\r\n            \r\n                <div className=\"flexColumnCenter\">\r\n\r\n                    <div className=\"flexColumnCenter card\">\r\n\r\n                        <div className=\"flexColumnCenter\">\r\n\r\n                            <div className=\"bold\"> {state.shop.name} </div>\r\n\r\n                            <div> description: {state.shop.description} </div>\r\n\r\n                            <div> position: {state.shop.position} </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"flexColumnCenter\">\r\n\r\n                            {state.isLoadedQueueMaxDuration ?\r\n                                <div className=\"littleMargin\"> <div className=\"bold\"> Expected Queue duration </div> {state.queueMaxDuration} </div>\r\n                                :\r\n                                <WaveLoading style={{position: \"relative\"}}/>\r\n                            }\r\n\r\n                        </div>\r\n\r\n                        {state.shop.shifts ?\r\n                            (state.shop.shifts).map(shift =>\r\n                                <div className=\"flexColumnCenter\">\r\n                                    <div> Day: {calcDay(shift.day)}</div>\r\n                                    <div>{shift.openingTime} - {shift.closingTime}</div>\r\n                                </div>\r\n                            )\r\n                            :\r\n                            \"\"\r\n                        }\r\n\r\n\r\n                    </div>\r\n                    <div>\r\n                        <GoToButton to={\"/Lineup/\" + state.shopId} content=\"Enqueue\" />\r\n                    </div>\r\n                </div>\r\n                :\r\n                <WaveLoading style={{ position: \"relative\" }} />\r\n            }\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Shop;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { axiosPOST } from '../utils/httpRequest';\r\nimport { showError } from '../utils/showError';\r\nimport Navigation from './sub-components/Navigation';\r\n\r\nconst Lineup = (props) => {\r\n\r\n    const [state, setState] = useState({\r\n        ttr: \"\",\r\n        duration: \"\",\r\n        shopId: parseInt(props.match.params.id)\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n\r\n    const handleLineupSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (document.getElementById(\"lineUp\").reportValidity()) {\r\n            sendLineUpToServer();\r\n        }\r\n    }\r\n\r\n    const sendLineUpToServer = () => {\r\n\r\n        var ttr = new Date(state.ttr*60*1000);\r\n\r\n        var duration = new Date(state.duration*60*1000);\r\n\r\n        const payload = {\r\n            \"timeToGetToTheShop\": ttr,\r\n            \"permanence\": duration,\r\n            \"shopid\": state.shopId\r\n        }\r\n        const onOk = (response) => {\r\n            if (response.data.id) {\r\n                history.push('/Ticket/' + response.data.id);\r\n            }\r\n            else {\r\n                response = {\r\n                    ...response,\r\n                    data: \"server was not ble to enqueue you (Lineup.js message, because response has no body)\"\r\n                }\r\n                showError(response);\r\n            }\r\n        }\r\n        axiosPOST(\"QSW\", \"/enqueue\", payload, {}, onOk, null, null, true, false, true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"flexColumnCenter\">\r\n            <Navigation goBack={true} goHome={true}/>\r\n            <div class=\"tooltip\">Info\r\n                    <span class=\"tooltiptext\">\r\n                        This page is used to enqueue in a shop. <br />\r\n                        You just need to indicate the time you'll need to reach the shop and the expected duration of you permanence inside the shop < br/>\r\n                        These two value will be used to position you in the queue correctly, to have a great expirience with our application please insert true values and respect them.\r\n                </span>\r\n            </div>\r\n            <form className=\"flexColumnCenter card\" id=\"lineUp\" onSubmit={handleLineupSubmit} autoComplete=\"off\">\r\n                <div className=\"flexColumnCenter littleMargin\">\r\n                    <label className=\"bold\">Time to reach the shop (in minutes)</label>\r\n                    <input className=\"inputTextField\" onChange={handleChange}\r\n                        value={state.ttr}\r\n                        id=\"ttr\"\r\n                        type='number' placeholder=\"10\" name=\"ttr\" required /> \r\n                </div>\r\n                <div className=\"flexColumnCenter littleMargin\">\r\n                    <label className=\"bold\">Duration of the permanence (in minutes)</label>\r\n                    <input className=\"inputTextField\" onChange={handleChange}\r\n                        value={state.duration}\r\n                        id=\"duration\"\r\n                        type='number' placeholder=\"15\" name=\"duration\" required />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">Lineup</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Lineup;","import React, { useState, useEffect } from 'react';\r\nimport { WaveLoading } from 'react-loadingg';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { dateToMinutes } from '../utils/dateParser';\r\nimport { axiosGET } from '../utils/httpRequest.js';\r\nimport Navigation from './sub-components/Navigation';\r\n\r\nconst Ticket = (props) => {\r\n\r\n    const [state, setState] = useState({\r\n        isLoadedTicket: false,\r\n        ticket: null,\r\n        ticketId: props.match.params.id,\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    //fetch ticket info\r\n    useEffect(() => {\r\n        const onOk = (response) => {\r\n            setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    isLoadedTicket: true,\r\n                    ticket: response.data\r\n                }\r\n            });\r\n        }\r\n        axiosGET(\"SSW\", (\"/ticketDetail/\" + state.ticketId), {}, onOk, null, null, true, false, true);\r\n    }, [state.ticketId]);\r\n\r\n    const handleDequeue = () => {\r\n        const onOk = () => {\r\n            history.push(\"/Home\");\r\n        }\r\n        axiosGET(\"QSW\", (\"/dequeue/\" + state.ticketId), {}, onOk, null, null, true, false, true);\r\n    }\r\n\r\n    const handleOnClickShop = () => {\r\n        history.push('/Shop/' + state.ticket.shop.id);\r\n    }\r\n\r\n    return (\r\n        <div className=\"flexColumnCenter\">\r\n            <Navigation goBack={true} goHome={true} />\r\n            {state.isLoadedTicket ?\r\n                <div className=\"flexColumnCenter\">\r\n                    <div class=\"tooltip\">Info\r\n                        <span class=\"tooltiptext\">\r\n                            This is the page of a ticket. <br />\r\n                            This page contains: <br />\r\n                            - status: ticket status (also the color of the border is based on the status) <br/>\r\n                            - the time needed to reach the shop<br/>\r\n                            - the duration of the permanence inside the shop<br/>\r\n                            - enter time: if available the actual time the ticket was scanned to enter the shop<br/>\r\n                            - exit time: if available the actual time the ticket was scanned to exit the shop<br/>\r\n                            - start the starting time to scan the ticket to enter the shop<br/>\r\n                            - expected end: the expected time you'll scan the ticket to exit the shop<br/>\r\n                            - a button to check the shop this ticket is enqueued in<br/>\r\n                            - a button to delete the ticket\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"bold yourTicketTitle\">TICKET (ID: {state.ticket.id})</div>\r\n                   \r\n                    <div className={\"flexColumnCenter card \" + state.ticket.status}>\r\n\r\n                        <div> <div className=\"bold\">Status </div> {state.ticket.status} </div>\r\n\r\n                        <div> <div className=\"bold\">Time To Reach The Shop </div> {dateToMinutes(state.ticket.timeToReachTheShop)} minutes </div>\r\n\r\n                        <div> <div className=\"bold\">Declared duration of the Permanence </div> {dateToMinutes(state.ticket.expectedDuration)} minutes </div>\r\n\r\n                        <div className=\"flexColumnCenter\">\r\n\r\n                            {state.ticket.enterTime ? <div> <div className=\"bold\">Enter Time </div> {state.ticket.enterTime} </div> : \"\"}\r\n\r\n                            {state.ticket.exitTime ? <div> <div className=\"bold\">Exit Time </div> {state.ticket.exitTime} </div> : \"\"}\r\n\r\n                            {state.ticket.scheduledEnteringTime ? <div> <div className=\"bold\">start </div> {state.ticket.scheduledEnteringTime} </div> : \"\"}\r\n\r\n                            {state.ticket.scheduledExitingTime ? <div> <div className=\"bold\">expected end </div> {state.ticket.scheduledExitingTime} </div> : \"\"}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"flexRowCenter\">\r\n                        <button className=\"smallButton\" onClick={handleOnClickShop}>Check shop</button> \r\n                        or\r\n                        <button className=\"smallButton\" onClick={handleDequeue}> Dequeue </button>\r\n                    </ div>\r\n\r\n                </div>\r\n                :\r\n                <WaveLoading style={{ position: \"relative\" }} />\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Ticket;","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport shopImg from '../../images/shop.png';\r\n\r\nconst ShopElementManager = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const handleOnClick = () => {\r\n        history.push('/ShopManager/' + props.shop.id);\r\n    }\r\n\r\n    return (\r\n        <div className=\"flexColumnCenter card\">\r\n            <div className=\"flexRowCenter\">\r\n                <div>\r\n                    <img\r\n                        className=\"shopImg\"\r\n                        src={shopImg}\r\n                        alt=\"Account\" />\r\n                </div>\r\n                <div className=\"flexColumnCenter\">\r\n                    <div className=\"bold\"> {props.shop.name} </div>\r\n                    <button className=\"smallButton\" onClick={handleOnClick}>More info</button>\r\n                    <div> {props.shop.position} </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShopElementManager;","import React from 'react';\r\nimport ShopElementManager from './ShopElementManager';\r\nimport { WaveLoading } from 'react-loadingg';\r\n\r\nconst ShopsListManager = (props) => {\r\n    if (props.isLoaded) {\r\n        return (\r\n            <div className=\"flexColumnCenter\">\r\n                <div className=\"bold yourShopsTitle\">YOUR SHOPS:</div>\r\n                <div class=\"tooltip\">info\r\n                    <span class=\"tooltiptext\">\r\n                        In this section you can see all your shops <br/>\r\n                        For each shop you can see the following informations: <br/>\r\n                        - shop name <br/>\r\n                        - shop position <br/>\r\n                        - a button to go to the relative shop page\r\n                    </span>\r\n                </div>\r\n                {(props.shops !== null && props.shops.length !== 0) ?\r\n                    (props.shops).map(shop => <ShopElementManager key={shop.id} shop={shop} />)\r\n                    :\r\n                    \"There are no shops.\"\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return <div className=\"flexColumnCenter\"> <WaveLoading style={{position: \"relative\"}} /></div>\r\n    }\r\n}\r\n\r\nexport default ShopsListManager;","import React, { useEffect, useState } from 'react';\r\nimport Account from './sub-components/Account';\r\nimport { axiosGET } from '../utils/httpRequest.js';\r\nimport ShopsListManager from './sub-components/ShopsListManager';\r\nimport GoToButton from './sub-components/GoToButton';\r\n\r\n\r\nconst HomeManager = () => {\r\n\r\n    const [state, setState] = useState({\r\n        isLoadedShops: false,\r\n        isLoadedAccount: false,\r\n        account: null,\r\n        shops: null\r\n    });\r\n\r\n    //fetch shops info\r\n    useEffect(() => {\r\n        const onOk = (response) => {\r\n            setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    isLoadedShops: true,\r\n                    shops: response.data\r\n                }\r\n            });\r\n        }\r\n        axiosGET(\"SSW\", \"/shops\", {}, onOk, null, null, true, false, true);\r\n    }, []);\r\n\r\n    //fetch account info\r\n    useEffect(() => {\r\n        const onOk = (response) => {\r\n            setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    isLoadedAccount: true,\r\n                    account: response.data\r\n                }\r\n            });\r\n        }\r\n        axiosGET(\"AMW\", \"/userinfo\", {}, onOk, null, null, true, false, true);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flexColumnCenter\">\r\n            <Account isLoaded={state.isLoadedAccount} account={state.account} />\r\n            <div className=\"flexRowCenter width80 topSpace\">\r\n                <GoToButton to=\"/TimeLine\" content=\"Time Line\" />\r\n                <GoToButton to=\"/NewShop\" content=\"New shop\" />\r\n            </div>\r\n            <ShopsListManager isLoaded={state.isLoadedShops} shops={state.shops} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeManager;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { axiosPOST} from '../utils/httpRequest';\r\nimport { showError } from '../utils/showError';\r\nimport Navigation from './sub-components/Navigation';\r\n\r\nconst NewShop = () => {\r\n\r\n    const [state, setState] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        position: \"\",\r\n        image: \"no image\",\r\n        shopCapacity: 1,\r\n        timeslotMinutesDuration: 3,\r\n        maxEnteringClientInATimeslot: 0,\r\n        shiftsProto: [\r\n            {\r\n                day: 0,\r\n                openingTime: new Date(),\r\n                closingTime: new Date(),\r\n            }\r\n        ]\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n\r\n    const handleNewShopSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (document.getElementById(\"newShop\").reportValidity()) {\r\n            sendNewShopToServer();\r\n        }\r\n    }\r\n\r\n    const sendNewShopToServer = () => {\r\n        const payload = {\r\n            name: state.name,\r\n            description: state.description,\r\n            position: state.position,\r\n            shopCapacity: parseInt(state.shopCapacity),\r\n            timeslotMinutesDuration: parseInt(state.timeslotMinutesDuration),\r\n            maxEnteringClientInATimeslot: parseInt(state.shopCapacity),\r\n            image: state.image,\r\n            shiftsProto: state.shiftsProto\r\n        }\r\n        const onOk = (response) => {\r\n            console.log(\"RESPOOOOOONSEEEE\");\r\n            console.log(response);\r\n            if (response) {\r\n                history.push('/ShopManager/' + response.data);\r\n            }\r\n            else {\r\n                response = {\r\n                    ...response,\r\n                    data: \"server was not able to register a new shop\"\r\n                }\r\n                showError(response);\r\n            }\r\n        }\r\n        axiosPOST(\"SSW\", \"/newshop\", payload, {}, onOk, null, null, true, false, true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"flexColumnCenter\">\r\n            <Navigation goBack={true} goHome={true} />\r\n            <div class=\"tooltip\">info\r\n                    <span class=\"tooltiptext\">\r\n                    This page consists of a form to create a new shop.<br/>\r\n                    The \"shop capacity\" field represent the amount of persone that the store can host at the same time.<br/>\r\n                    The \"Duration of a time slot\" field is one of the parameters used to calculate a queue. Usually 3 is a good value. To have more information please read the algorithm section of the DD document.\r\n                </span>\r\n            </div>\r\n            <form className=\"card flexColumnCenter\" id=\"newShop\" onSubmit={handleNewShopSubmit} autoComplete=\"off\">\r\n                <div className=\"flexColumnCenter bold\">\r\n                    <label>Shop name:</label>\r\n                    <input className=\"inputTextField\" onChange={handleChange}\r\n                        value={state.name}\r\n                        id=\"name\"\r\n                        type='text' placeholder=\"shop name\" name=\"name\" required />\r\n                </div>\r\n                <div className=\"flexColumnCenter bold\">\r\n                    <label>Description:</label>\r\n                    <input className=\"inputTextField\" onChange={handleChange}\r\n                        value={state.description}\r\n                        id=\"description\"\r\n                        type='text' placeholder=\"This shop is...\" name=\"description\" required />\r\n                </div>\r\n                <div className=\"flexColumnCenter bold\">\r\n                    <label>Position:</label>\r\n                    <input className=\"inputTextField\" onChange={handleChange}\r\n                        value={state.position}\r\n                        id=\"position\"\r\n                        type='text' placeholder=\"ShopStreet, 5, ShopCity\" name=\"position\" required />\r\n                </div>\r\n                <div className=\"flexColumnCenter bold\">\r\n                    <label>Shop capacity:</label>\r\n                    <input className=\"inputTextField\" onChange={handleChange}\r\n                        value={state.shopCapacity}\r\n                        id=\"shopCapacity\"\r\n                        type='number' placeholder=\"max number of clients\" name=\"shopCapacity\" required />\r\n                </div>\r\n                <div className=\"flexColumnCenter bold\">\r\n                    <label>Duration of a time slot (in minutes):</label>\r\n                    <input className=\"inputTextField\" onChange={handleChange}\r\n                        value={state.timeslotMinutesDuration}\r\n                        id=\"timeslotMinutesDuration\"\r\n                        type='number' placeholder=\"3\" name=\"timeslotMinutesDuration\" required />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">Create Shop</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewShop;","import React from 'react';\r\nimport TicketElement from './TicketElement';\r\n\r\nconst Queue = (props) => {\r\n\r\n    if(props.tickets.lenght === 0){\r\n        return(\r\n            <div className=\"flexColumnCenter\">\r\n                No tickets \r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <div className=\"flexColumnCenter\">\r\n                {(props.tickets).map(ticket => (\r\n                    <div key={ticket.id} className=\"flexColumnCenter\">\r\n                        <TicketElement key={ticket.id} ticket={ticket} showShop={false} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Queue;","import React, { useState, useEffect } from 'react';\r\nimport { WaveLoading } from 'react-loadingg';\r\nimport { calcDay } from '../utils/dateParser.js';\r\nimport { axiosGET } from '../utils/httpRequest.js';\r\nimport Queue from './sub-components/Queue.js';\r\nimport Navigation from './sub-components/Navigation';\r\n\r\nconst ShopManager = (props) => {\r\n\r\n    const [state, setState] = useState({\r\n        isLoadedShop: false,\r\n        shop: null,\r\n        isLoadedQueueMaxDuration: false,\r\n        queueMaxDuration: null,\r\n        shopId: props.match.params.id,\r\n        queueTrigger: false,\r\n        tickets: null\r\n    });\r\n\r\n    //fetch shop info\r\n    useEffect(() => {\r\n        const onOk = (response) => {\r\n            setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    isLoadedShop: true,\r\n                    shop: response.data.shop,\r\n                    tickets: response.data.tickets\r\n                }\r\n            });\r\n        }\r\n        axiosGET(\"SSW\", (\"/shopDetail/\" + state.shopId), {}, onOk, null, null, true, false, true);\r\n    }, [state.shopId]);\r\n\r\n    //fetch queue expected duration\r\n    useEffect(() => {\r\n        const onOk = (response) => {\r\n            setState(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    isLoadedQueueMaxDuration: true,\r\n                    queueMaxDuration: response.data\r\n                }\r\n            });\r\n        }\r\n        axiosGET(\"QSW\", (\"/queueInfo/\" + state.shopId), {}, onOk, null, null, true, false, true);\r\n    }, [state.shopId]);\r\n\r\n    const triggerQueue = () => {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            queueTrigger: !prevState.queueTrigger\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"flexColumnCenter\">\r\n\r\n            <Navigation goBack={true} goHome={true} />\r\n\r\n            <div class=\"tooltip\">info\r\n                    <span class=\"tooltiptext\">\r\n                    This is the page of a shop: <br />\r\n                    In this page you can see the following informations:<br/>\r\n                    -shop name<br/>\r\n                    -shop description <br/>\r\n                    -shop position <br/>\r\n                    -button to show all the tickets of the shop <br/>\r\n                    -informations about the tickets (...) <br/>\r\n                    -the \"scan ticket\" button: this button is here to show what would happen if a customer scanned the ticket to enter or exit a shop\r\n                </span>\r\n            </div>\r\n\r\n            {state.isLoadedShop ?\r\n\r\n                <div className=\"flexColumnCenter card\">\r\n\r\n                    <div className=\"flexColumnCenter\">\r\n\r\n                        <div className=\"bold\"> {state.shop.name} </div>\r\n\r\n                        <div> description: {state.shop.description} </div>\r\n\r\n                        <div> position: {state.shop.position} </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"flexColumnCenter\">\r\n\r\n                        {state.isLoadedQueueMaxDuration ?\r\n                            <div className=\"littleMargin\"> <div className=\"bold\"> Expected Queue duration </div> {state.queueMaxDuration} </div>\r\n                            :\r\n                            <WaveLoading style={{ position: \"relative\" }} />\r\n                        }\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                :\r\n                <WaveLoading style={{ position: \"relative\" }} />\r\n            }\r\n\r\n            {\r\n                state.isLoadedShop ?\r\n                    <div className=\"flexColumnCenter\">\r\n                        \r\n                        < button onClick={triggerQueue}>{state.queueTrigger ? \"Hide\" : \"Show\"} tickets</button>\r\n                        {\r\n                            state.queueTrigger ?\r\n                                <Queue shopId={state.shopId} tickets={state.tickets} />\r\n                                :\r\n                                \"\"\r\n                        }\r\n                    </div>\r\n                    :\r\n                    \"\"\r\n            }\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default ShopManager;","import React from 'react';\r\n\r\nconst TicketTracker = (props) => {\r\n\r\n    const ticketTracker = props.ticketTracker;\r\n\r\n    return (\r\n        <div className=\"flexColumnCenter cardWhite\">\r\n            <div> TICKET (ID: {ticketTracker.Ticket.id}) </div>\r\n            <div> status {ticketTracker.Ticket.status}</div>\r\n            <div> prev: {ticketTracker.previousMatchingTicket}, follow: {ticketTracker.followingMatchingTicket} </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TicketTracker;","import React from 'react';\r\nimport TicketTracker from './TicketTracker';\r\n\r\nconst TimeSlot = (props) => {\r\n\r\n    const timeslot = props.timeSlot;\r\n\r\n    return (\r\n        <div className=\"flexColumnCenter card\">\r\n            <div className=\"simpleTitle\"> TIME SLOT (ID: {timeslot.id}) </div>\r\n            <div> from:  {timeslot.startingTime} <br /> to: {timeslot.endingTime} </div>\r\n            <div className=\"flexRowStart\">\r\n                <div className=\"flexColumnCenter\">\r\n                    <div className=\"simpleTitle\"> EXPECTED ENTERING TICKETS </div>\r\n                    {timeslot.expectedEnteringTickets ? (timeslot.expectedEnteringTickets).map(ticketTracker => <TicketTracker ticketTracker={ticketTracker}/>) : \"\"}\r\n                </div>\r\n                <div className=\"flexColumnCenter\">\r\n                    <div className=\"simpleTitle\"> EXPECTED EXITING TICKETS </div>\r\n                    {timeslot.expectedExitingTickets ? (timeslot.expectedExitingTickets).map(ticketTracker => <TicketTracker ticketTracker={ticketTracker}/>) : \"\"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TimeSlot;","import React, { useState } from 'react';\r\nimport GoBackButton from './sub-components/GoBackButton';\r\nimport TimeSlot from './sub-components/TimeSlot';\r\n\r\nconst ParseTimeLine = (props) => {\r\n\r\n    const [state, setState] = useState(null);\r\n\r\n    const getJSON = (e) => {\r\n        setState(JSON.parse(e.target.value));\r\n    }\r\n\r\n    return (\r\n        <div className=\"flexColumnCenter\">\r\n            <GoBackButton />\r\n            <div class=\"tooltip\">info\r\n                    <span class=\"tooltiptext\">\r\n                    This page will not be available in any official release.<br/>\r\n                    This page is useful for debugging, in fact, it allows you to paste the terminal output printed in JSON format from the \"QSW\" module. <br/>\r\n                    The JSON data represents the time line of the tickets in the queue and by pasting it in the textbox of this page, you'll be able to graphically visualize the time line and the arrangement of the tickets.\r\n                </span>\r\n            </div>\r\n            <div className=\"flexColumnCenter card\">\r\n                <label className=\"bold littleMargin\">Paste JSON here:</label>\r\n                <input className=\"inputTextField \" onChange={getJSON} type=\"text\"></input>\r\n            </div>\r\n            {state != null ?\r\n                <div>\r\n                    {(state).map(timeslot => <TimeSlot key={timeslot.id} timeSlot={timeslot}/>)}\r\n                </div>\r\n                : \"\"}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ParseTimeLine;","import React from 'react';\nimport './css/App.css';\nimport 'fontsource-roboto';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Start from './components/Start';\nimport Home from './components/Home';\nimport Search from './components/Search';\nimport Shops from './components/Shops';\nimport Shop from './components/Shop';\nimport Lineup from './components/Lineup';\nimport Ticket from './components/Ticket';\nimport HomeManager from './components/HomeManager';\nimport NewShop from './components/NewShop';\nimport ShopManager from './components/ShopManager';\nimport ParseTimeLine from './components/ParseTimeLine';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Router>\n                <div id=\"App\" className=\"App\">\n                    <Switch>\n                        <Route path=\"/\" exact component={Start} /> {/* Login page */}\n                        <Route path=\"/Home\" exact component={Home} /> {/* Home page for users */}\n                        <Route path=\"/Search\" exact component={Search} /> {/* Search a shop page */}\n                        <Route path=\"/Shops\" exact component={Shops} /> {/* List of shops page */}\n                        <Route path=\"/Shop/:id\" exact component={Shop} /> {/* Shop page for users */}\n                        <Route path=\"/Lineup/:id\" exact component={Lineup} /> {/* Line up page */}\n                        <Route path=\"/Ticket/:id\" exact component={Ticket} /> {/* Ticket page */}\n                        <Route path=\"/HomeManager\" exact component={HomeManager} /> {/* Home page for managers */}\n                        <Route path=\"/NewShop\" exact component={NewShop} /> {/* New shop page */}\n                        <Route path=\"/ShopManager/:id\" exact component={ShopManager} /> {/* Shop page for managers */}\n                        <Route path=\"/TimeLine\" exact component={ParseTimeLine} />\n                    </Switch>\n                </div>\n            </Router>\n        </React.Fragment>\n\n    );\n}\nexport default App;\n\n//to fetch items from an API use the following code:\n//import {useState, useEffect} from 'react'\n//the use effect will make the fetch happen when the component mounts:\n//useEffect(() => {\n//  fetchItems();\n//},[])\n//with the useState we can save the fetched items in the state:\n//const [items, setItems] = useState({});\n//const fetchItems = async () => {\n//  const data = await fetch('https://urlgoeshere');\n//  const items = await data.json();\n//  setItems(items);\n//}\n\n//fetching a POST request:\n/* evt.preventDefault();\n//fetching a POST request:\nconst Url = \"http://localhost:8080/\";\nconst Params = {\n    param1: 'value',\n    param2: 2\n}\nconst Body = {\n    thingone: \"something\",\n    etc: \"something else\"\n};\nconst requestSettings = {\n    headers: {\n        \"header-name\": \"header-content\"\n    },\n    body: Body,\n    method: \"POST\"\n};\nfetch(Url + new URLSearchParams(Params), requestSettings)\n    .then(response => { return response.json() })\n    .then(data => { console.log(data); setData(data) })\n    .catch(err => { console.log(err); setError(err) }); */\n\n//CONTEXT API for state management","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}